module sonic-stp {
    namespace "http://github.com/sonic-net/sonic-stp";
    prefix stp;

    import sonic-ext {
        prefix sonic-ext;
    }

    description "SONiC STP YANG model for PVST and MST configurations";

    revision 2024-11-22 {
        description "Version01 for combined PVST and MST configurations.";
    }

    grouping vlanModeAttr {
        leaf forward_delay {
            type uint8 {
                range "4..30" {
                    error-message "Invalid Forwarding Delay value.";
                }
            }
            units seconds;
            default 15;
            description
                "The delay used by STP bridges to transition root and
                designated ports to forwarding";
        }

        leaf hello_time {
            type uint8 {
                range "1..10" {
                    error-message "Invalid Hello Time value.";
                }
            }
            units seconds;
            default 2;
            description
                "The interval between periodic transmissions of
                configuration messages by designated ports";
        }

        leaf max_age {
            type uint8 {
                range "6..40" {
                    error-message "Invalid Maximum Age Time value.";
                }
            }
            units seconds;
            default 20;
            description
                "The maximum age of the information transmitted by the
                bridge when it is the root bridge";
        }

        leaf priority {
            type uint16 {
                range "0..61440" {
                    error-message "Invalid Bridge Priority value.";
                }
            }
            sonic-ext:custom-validation ValidateBridgePriority;
            default 32768;
            description
                "The manageable component of the Bridge Identifier";
        }
    }

    container stp {
        description "STP global and per-instance configurations";

        container global {
            description "Global STP settings";
            leaf mode {
                type enumeration {
                    enum "pvst" {
                        description "Per VLAN Spanning Tree mode";
                    }
                    enum "mst" {
                        description "Multiple Spanning Tree mode";
                    }
                }
                description "STP mode (PVST or MST)";
            }
            leaf rootguard_timeout {
                type uint16 {
                    range "5..600";
                }
                default "30";
                description "Root guard timeout in seconds";
            }

            uses vlanModeAttr;
            
            // MST-specific attributes
            leaf mst_name {
                when "../mode = 'mst'";
                type string {
                    length "1..32";
                }
                default "<MAC_ADDRESS>";
                description "MST region name (default: MAC address of switch)";
            }
            leaf mst_revision {
                when "../mode = 'mst'";
                type uint16 {
                    range "0..65535";
                }
                default "0";
                description "MST region revision number";
            }
            leaf mst_max_hop {
                when "../mode = 'mst'";
                type uint8 {
                    range "1..40";
                }
                default "20";
                description "Maximum hops in MST region";
            }
        }

        container STP_VLAN {
            list STP_VLAN_LIST {
                key "name";
                sonic-ext:custom-validation ValidateStpMaxInstance;
                leaf name {
                    type string;
                    description "Vlan identifier";
                }

                leaf vlanid {
                    type uint16 {
                        range "1..4095" {
                            error-message "Vlan ID out of range";
                            error-app-tag vlanid-invalid;
                        }
                    }
                    description "Vlan identifier number";
                }

                leaf enabled {
                    type boolean;
                    sonic-ext:custom-validation ValidateStpDisableVlan;
                    mandatory true;
                    description "Spanning tree enabled/disabled on Vlan";
                }

                uses vlanModeAttr;
            }
        }

        container STP_MST {
            list STP_MST_LIST {
                max-elements 1;
                key "keyleaf";
                sonic-ext:dependent-on "STP_LIST";

                leaf keyleaf {
                    type enumeration {
                        enum GLOBAL;
                    }
                    description "Key node identifier. It's value is always GLOBAL";
                }

                leaf name {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type string;
                    description "MST Region name";
                }

                leaf revision {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type uint32;
                    description "MST Revision number";
                }

                leaf max_hops {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type uint8;
                    description "MST Max hops";
                }

                leaf hello_time {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type uint8;
                    description "MST hello time";
                }

                leaf max_age {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type uint8;
                    description "MST max age";
                }

                leaf forward_delay {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type uint8;
                    description "MST forward delay";
                }

                leaf hold_count {
                    must "../../../STP/STP_LIST[keyleaf='GLOBAL']/mode='mst'" {
                        error-message "Configuration allowed in MST mode";
                        error-app-tag stp-invalid;
                    }
                    type uint8;
                    description "MST hold count";
                }
            }
        }

        container interface {
            list interface {
                key "name";
                description "Interface-level STP configuration";
                leaf name {
                    type string;
                    description "Interface name (physical or port-channel)";
                }
                leaf enabled {
                    type boolean;
                    default "true";
                    description "Whether STP is enabled on this interface";
                }
                leaf root_guard {
                    type boolean;
                    default "false";
                    description "Whether root guard is enabled on this interface";
                }
                leaf bpdu_guard {
                    type boolean;
                    default "false";
                    description "Whether BPDU guard is enabled";
                }
                leaf bpdu_guard_do_disable {
                    type boolean;
                    default "false";
                    description "Disable port when BPDU is received";
                }
                leaf path_cost {
                    type uint32 {
                        range "1..200000000";
                    }
                    description "Path cost for this interface";
                }
                leaf priority {
                    type uint8 {
                        range "0..240";
                    }
                    default "128";
                    description "Interface priority";
                }
                leaf portfast {
                    type boolean;
                    default "false";
                    description "Portfast is enabled or not";
                }
                leaf uplink_fast {
                    type boolean;
                    default "false";
                    description "Uplink fast is enabled or not";
                }
            }
        }

        container mst_instance {
            list mst_instance {
                when "../global/mode = 'mst'";
                key "instance-id";
                description "MST instance configurations";
                leaf instance-id {
                    type uint8 {
                        range "0..63";
                    }
                    description "MST instance ID";
                }
                leaf bridge_priority {
                    type uint16 {
                        range "0..61440";
                    }
                    default "32768";
                    description "Bridge priority for this MST instance";
                }
                leaf vlan_list {
                    type string;
                    description "List of VLANs assigned to this MST instance";
                }
            }
        }

        container mst_port {
            list mst_port {
                when "../global/mode = 'mst'";
                key "instance-id interface";
                description "Per-port MST configuration";
                leaf instance-id {
                    type uint8 {
                        range "0..63";
                    }
                    description "MST instance ID";
                }
                leaf interface {
                    type string;
                    description "Interface name (physical or port-channel)";
                }
                leaf path_cost {
                    type uint32 {
                        range "1..20000000";
                    }
                    description "Path cost for this MST instance port";
                }
                leaf priority {
                    type uint8 {
                        range "0..240";
                    }
                    default "128";
                    description "Port priority for this MST instance";
                }
            }
        }
    }
}